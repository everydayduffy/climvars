% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gseason_prec.R, R/physclimvars.R
\name{gseason_prec}
\alias{gseason_prec}
\title{gseason_prec: Calculate the growing season period as determined by
precipitation and evapotranspiration balance.}
\usage{
gseason_prec(prec, evap, tme, period = "monthly", surplus = TRUE)

gseason_prec(prec, evap, tme, period = "monthly", surplus = TRUE)
}
\arguments{
\item{prec}{a vector of precipitation values.}

\item{evap}{a vector of evapotranspiration values.}

\item{tme}{a \code{POSIXlt} object representing the date and time of each \code{evap} value.}

\item{period}{an optional character string defining time period of precipitation and evapotranspiration measurements. Options include "monthly" and "bimonthly". If left unspecified, assumed 'submonthly'.}

\item{surplus}{default = TRUE}

\item{tme1}{a \code{POSIXlt} object representing the date and time of each \code{prec}
value.}

\item{tme2}{a \code{POSIXlt} object representing the date and time of each \code{evap}
value.}

\item{nday}{a single numeric deifning the number of days over which to smooth
the data.}
}
\value{
A time-series object of binary values, where 1 indicates growing
season and 0 indicates not growing season.

A vector of binary values, where 1 indicates growing season and 0 indicates not growing season.
}
\description{
\code{gseason_prec} calculates growing season period where
precipitation exceeds half the potential evapotranspiration.

\code{gseason_prec} calculates growing season period where precipitation exceeds half the potential evapotranspiration.
}
\details{
The growing season is defined as the period when precipitation
exceeds half the potential evapotranspiration. If prec and evap have
differing temporal resolutions, data are aggregated to the coarser of the
two. More about smoothing....

The growing season is defined as the period when precipitation exceeds half the potential evapotranspiration.
If period is "monthly", data are aggregated by each month.
If period is "bimonthly", data are aggregated by each half-month.
If surplus = 'TRUE', generates a vector of growing season values for the specified time period.
Requires wrapper functions \code{submonthly} and \code{cumsumseq} to be loaded.
}
\examples{
tme1 <- tmecreate(2010,24)
tme2 <- tmecreate(2010,24)
prec <- (10 * sin(c(0:364) * (pi / -360)) + rnorm(365) + 15)
evap <- (10 * sin(c(0:364) * (pi / +360)) + rnorm(365) + 2)
gseason_prec(prec, evap, tme1, tme2)
gseason_prec(prec, evap, tme1, tme2, nday = 10)

prec <- (10 * sin(c(0:364) * (pi / -360)) + rnorm(365) + 15)
evap <- (10 * sin(c(0:364) * (pi / +360)) + rnorm(365) + 2)
tme <- tmecreate(2010, 24)
gsp <- gseason_prec(prec, evap, tme, period = "monthly", surplus = TRUE)
gsp <- gseason_prec(prec, evap, tme, period = "bimonthly", surplus = TRUE)
plot(gsp)

}
\seealso{
\code{\link[=tmecreate]{tmecreate()}} can be used to create a POSIXlt object.

the \code{\link[=tmecreate]{tmecreate()}} function can be used to create a POSIXlt object.

\code{\link[=submonthly]{submonthly()}}

\code{\link[=cumsumseq]{cumsumseq()}}
}
